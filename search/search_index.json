{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home - A space for my thoughts and projects","text":"<p>Below is a list scientific publications, CV entries and blog posts. If you like a more structured view, check the categories in the sidebar.</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#disclaimer","title":"Disclaimer","text":"<p>The views and opinions expressed here are my own and do not reflect the official policies, views, or positions of my employer. All content is created in a personal capacity.</p>"},{"location":"about/#projects-i-support","title":"Projects I Support","text":"<p>For transparency, this is a list of organizations I am a member of or support financially</p> <ul> <li>Wikimedia Deutschland e.V.</li> <li>OpenStreetMap Foundation</li> <li>Internet Archive</li> <li>Open Source Robotics Alliance</li> </ul>"},{"location":"about/#ai-policy","title":"AI Policy","text":"<p>I occasionally use LLM tools to assist in proofreading, idea generation, editing, and research. However, all text is produced and finalized by a human author. Feedback is always welcome to refine the approach to using AI responsibly.</p>"},{"location":"about/#kekse","title":"Cookie Policy","text":"<p>We use Posthog cookies to recognize your repeated visits and preferences. With your consent, you're helping us to make this page better.</p>"},{"location":"about/#impressum","title":"Impressum","text":"<p>Angaben gem\u00e4\u00df \u00a7 5 DDG</p> <p>Christian Henkel c/o Postflex #8207 Emsdettener Str. 10 48268 Greven</p> <p>Vertreten durch: Christian Henkel</p> <p>Kontakt: E-Mail: post@{nachname}{vorname}.de</p> <p>Verantwortlich f\u00fcr den Inhalt nach \u00a7 55 Abs. 2 RStV: Christian Henkel c/o Postflex #8207 Emsdettener Str. 10 48268 Greven</p>"},{"location":"about/#haftungsausschluss","title":"Haftungsausschluss","text":""},{"location":"about/#haftung-fur-inhalte","title":"Haftung f\u00fcr Inhalte","text":"<p>Die Inhalte unserer Seiten wurden mit gr\u00f6\u00dfter Sorgfalt erstellt. F\u00fcr die Richtigkeit, Vollst\u00e4ndigkeit und Aktualit\u00e4t der Inhalte k\u00f6nnen wir jedoch keine Gew\u00e4hr \u00fcbernehmen. Als Diensteanbieter sind wir gem\u00e4\u00df \u00a7 7 Abs.1 DDG f\u00fcr eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach \u00a7\u00a7 8 bis 10 DDG sind wir als Diensteanbieter jedoch nicht verpflichtet, \u00fcbermittelte oder gespeicherte fremde Informationen zu \u00fcberwachen oder nach Umst\u00e4nden zu forschen, die auf eine rechtswidrige T\u00e4tigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unber\u00fchrt. Eine diesbez\u00fcgliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung m\u00f6glich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.</p>"},{"location":"about/#haftung-fur-links","title":"Haftung f\u00fcr Links","text":"<p>Unser Angebot enth\u00e4lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k\u00f6nnen wir f\u00fcr diese fremden Inhalte auch keine Gew\u00e4hr \u00fcbernehmen. F\u00fcr die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m\u00f6gliche Rechtsverst\u00f6\u00dfe \u00fcberpr\u00fcft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.</p>"},{"location":"about/#urheberrecht","title":"Urheberrecht","text":"<p>Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielf\u00e4ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung au\u00dferhalb der Grenzen des Urheberrechtes bed\u00fcrfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur f\u00fcr den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.</p>"},{"location":"about/#datenschutz","title":"Datenschutz","text":"<p>Die Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten m\u00f6glich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit m\u00f6glich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdr\u00fcckliche Zustimmung nicht an Dritte weitergegeben. Wir weisen darauf hin, dass die Daten\u00fcbertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitsl\u00fccken aufweisen kann. Ein l\u00fcckenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht m\u00f6glich. Der Nutzung von im Rahmen der Impressumspflicht ver\u00f6ffentlichten Kontaktdaten durch Dritte zur \u00dcbersendung von nicht ausdr\u00fccklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdr\u00fccklich widersprochen. Die Betreiber der Seiten behalten sich ausdr\u00fccklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.</p>"},{"location":"cv/15_08_ipa_1/","title":"Fraunhofer IPA: Scientific Associate","text":"","tags":["cloud","industry-4.0","software-engineering"]},{"location":"cv/15_08_ipa_1/#responsibilities","title":"Responsibilities","text":"<ul> <li>Software Architect Virtual Fort Knox</li> <li>Various PoCs on Cloud Computing and Cyber-physical Systems in Production</li> <li>Subproject Manager BMBF Aquias, a project on Digitization in Human-Robot-Interaction</li> </ul>","tags":["cloud","industry-4.0","software-engineering"]},{"location":"cv/15_08_ipa_1/#related-publications","title":"Related Publications","text":"<ul> <li>Manufacturing Service Bus: An Implementation</li> <li>Big-Data-Analytik: Datenbasierte Optimierung produzierender Unternehmen</li> <li>Challenges of Production Microservices</li> <li>Adaptive work instructions for people with disabilities in the context of human robot collaboration</li> <li>Inclusion Through Robotics: Designing Human-Robot Collaboration for Handicapped Workers</li> <li>Der digitale Arbeitsplatz in der Produktion: Herausforderungen und Chancen</li> </ul>","tags":["cloud","industry-4.0","software-engineering"]},{"location":"cv/15_08_ipa_1/#related-projects","title":"Related Projects","text":"<ul> <li>Virtual Fort Knox \u2013 sicher, f\u00f6derativ und vernetzt \ud83d\udcf9</li> <li>github Manufacturing Service Bus</li> <li>github MSB Client Python</li> <li>Aquias</li> </ul>","tags":["cloud","industry-4.0","software-engineering"]},{"location":"cv/17_01_ipa_2/","title":"Fraunhofer IPA: Project Manager","text":"","tags":["cloud","industry-4.0","ros"]},{"location":"cv/17_01_ipa_2/#responsibilities","title":"Responsibilities","text":"<ul> <li>Edge Computing in Automation</li> <li>Cooperative Path-Planning for Autonomous Guided Vehicles</li> <li>Subproject Manager H2020 ScalABLE 4.0, a project about scalable production through flexible automation</li> </ul>","tags":["cloud","industry-4.0","ros"]},{"location":"cv/17_01_ipa_2/#related-publications","title":"Related Publications","text":"<ul> <li>Cloud-based cooperative navigation for mobile service robots in dynamic industrial environments</li> <li>A Predictive Online Path Planning and Optimization Approach for Cooperative Mobile Service Robot Navigation in Industrial Applications</li> <li>Wie cyber-physische Systeme zu autonomer Produktion f\u00fchren</li> <li>Ant colony optimization based multi-robot planner for combined task allocation and path finding</li> </ul>","tags":["cloud","industry-4.0","ros"]},{"location":"cv/17_01_ipa_2/#related-projects","title":"Related Projects","text":"<ul> <li>Networked Navigation for mobile Robots \ud83d\udcf9</li> <li>github dockeROS</li> <li>ScalABLE 4.0</li> </ul>","tags":["cloud","industry-4.0","ros"]},{"location":"cv/17_01_ipa_2/#talks","title":"Talks","text":"<ul> <li> <p>Cloud Robotics Applications with Virtual Fort Knox</p> <p>@ ROS Industrial Conference 2017</p> <p>\ud83d\udcc4 slides</p> </li> <li> <p>dockeROS: Simply Running ROS Nodes in Docker Containers on Remote Robots</p> <p>@ ROS Industrial Conference 2018</p> <p>\ud83d\udcc4 slides \ud83d\udcf9 video</p> </li> <li> <p>RDP 034: How to use Docker with ROS using DockeROS with Christian Henkel</p> <p>@ ROS Developers Podcast</p> <p>\ud83c\udfa7 audio</p> </li> </ul>","tags":["cloud","industry-4.0","ros"]},{"location":"cv/19_02_pilz/","title":"Pilz: Research Engineer","text":"","tags":["industrial-robotics","safety","navigation","ros"]},{"location":"cv/19_02_pilz/#responsibilities","title":"Responsibilities","text":"<ul> <li>Realization of safe robot control using ROS</li> <li>Implementation of an industrial path planning</li> <li>Product Owner for PSENscan ROS driver</li> <li>Contribution in AI@Pilz - Working group to identify applications for artificial intelligence</li> <li>BMWK funded research project SDM4FZI on topics of Digital Twin and the Asset Administration Shell</li> </ul>","tags":["industrial-robotics","safety","navigation","ros"]},{"location":"cv/19_02_pilz/#related-projects","title":"Related Projects","text":"<ul> <li>github pilz_robots</li> <li>github psen_scan</li> </ul>","tags":["industrial-robotics","safety","navigation","ros"]},{"location":"cv/19_02_pilz/#talks","title":"Talks","text":"<ul> <li> <p>Safety Certified ROS-native Industrial Manipulator</p> <p>@ ROSCon 2019</p> <p>\ud83d\udcc4 slides \ud83d\udcf9 video</p> </li> <li> <p>The Industrial Trajectory Generation and Python API of pilz_industrial_motion</p> <p>@ MoveIt Workshop 2019</p> <p>\ud83d\udcc4 slides</p> </li> <li> <p>Advanced laser scanner data from PSENscan used for mobile robot navigation integrated in ROS</p> <p>@ ROS-Industrial Conference 2021</p> <p>\ud83d\udcf9 video</p> </li> </ul>","tags":["industrial-robotics","safety","navigation","ros"]},{"location":"cv/22_11_bosch/","title":"Bosch Research: Research Engineer","text":"","tags":["ros","navigation","deliberation","formal-methods"]},{"location":"publications/16_12_auckland_edwa/","title":"Energy Efficient Dynamic Window Approach for Local Path Planning in Mobile Service Robotics","text":"<p>Christian Henkel, Alexander Bubeck, Weiliang Xu @ IAV 2016</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1016/j.ifacol.2016.07.610</p>","tags":["first-author","energy-efficiency","navigation"]},{"location":"publications/17_04_cloudnav_jannik/","title":"Cloud-based cooperative navigation for mobile service robots in dynamic industrial environments","text":"<p>Jannik Abbenseth, Felipe Garcia Lopez, Christian Henkel, Stefan D\u00f6rr @ SAC 2017</p> <p>\ud83d\udd17 doi: 10.1145/3019612.3019710</p>","tags":["cloud","navigation","industry-4.0"]},{"location":"publications/17_07_big_data/","title":"Big-Data-Analytik: Datenbasierte Optimierung produzierender Unternehmen","text":"<p>Dennis Bauer, Tobias Maurer, Christian Henkel, Andreas Bildstein @ Zenodo</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.5281/zenodo.803099</p>","tags":["manufacturing"]},{"location":"publications/17_07_harmonized/","title":"A harmonized approach for constructing a robust and efficient technology backbone for agile manufacturing systems","text":"<p>Olga Meyer, Greg Rauhoeft, Christian Henkel, Ambra Cal\u00e0 @ INDIN 17</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1109/INDIN.2017.8104929</p>","tags":["industry-4.0","manufacturing"]},{"location":"publications/17_07_msb/","title":"Manufacturing Service Bus: An Implementation","text":"<p>Daniel Schel, Christian Henkel, Daniel Stock, Olga Meyer, Greg Rauh\u00f6ft, Peter Einberger, Matthias St\u00f6hr, Marc Andre Daxer, Joachim Seidelmann @ CIRP ICME'17</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1016/j.procir.2017.12.196</p>","tags":["cyber-physical-systems","cloud","industry-4.0","manufacturing"]},{"location":"publications/17_07_production_microservices/","title":"Challenges of Production Microservices","text":"<p>Benjamin G\u00f6tz, Daniel Schel, Dennis Bauer, Christian Henkel, Peter Einberger, Thomas Bauernhansl @ CIRP ICME'17</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1016/j.procir.2017.12.194</p>","tags":["cloud","software-engineering"]},{"location":"publications/17_09_cloudnav_felipe/","title":"A Predictive Online Path Planning and Optimization Approach for Cooperative Mobile Service Robot Navigation in Industrial Applications","text":"<p>Felipe Garcia Lopez, Jannik Abbenseth, Christian Henkel, Stefan D\u00f6rr @ SAC 2017</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1109/ECMR.2017.8098677</p>","tags":["cloud","navigation","industry-4.0"]},{"location":"publications/18_01_auckland_mecanum/","title":"Power-minimization and energy-reduction autonomous navigation of an omnidirectional Mecanum robot via the dynamic window approach local trajectory planning","text":"<p>Li Xie, Christian Henkel, Karl Stol, Weiliang Xu @ International Journal of Advanced Robotic Systems</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1177/1729881418754563</p>","tags":["energy-efficiency","navigation"]},{"location":"publications/18_02_aquias_teilhabe/","title":"Teilhabe durch Robotik: Ergonomische und sichere Arbeitspl\u00e4tze f\u00fcr schwerbehinderte Produktionsmitarbeiter in der Mensch-Roboter-Kollaboration","text":"<p>David Kremer, Sibylle Hermann, Matthias Schneider, Christian Henkel @ GfA-Fr\u00fchjahrskongress 2018</p> <p>\ud83d\udcc4 pdf</p>","tags":["industrial-robotics","human-robot-collaboration","people-with-disabilities","manufacturing","safety"]},{"location":"publications/18_07_aquias_indin/","title":"Adaptive Work Instructions for People with Disabilities in the Context of Human Robot Collaboration","text":"<p>Matthias St\u00f6hr, Matthias Schneider, Christian Henkel @ INDIN2018</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1109/INDIN.2018.8472070</p>","tags":["industry-4.0","people-with-disabilities"]},{"location":"publications/18_09_aquias_inclusion/","title":"Inclusion Through Robotics: Designing Human-Robot Collaboration for Handicapped Workers","text":"<p>David Kremer, Sibylle Hermann, Christian Henkel, Matthias Schneider @ Transdisciplinary Engineering Methods for Social Innovation of Industry 4.0</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.3233/978-1-61499-898-3-239</p>","tags":["industrial-robotics","human-robot-collaboration","people-with-disabilities"]},{"location":"publications/18_09_aquias_mrk/","title":"Mensch-Roboter-Kollaboration f\u00fcr Schwerbehinderte als Beitrag zur Inklusion in der Arbeitswelt","text":"<p>David Kremer, Sibylle Hermann, Christian Henkel @ aq&amp;I Conference 2018</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.14464/awic.v3i0.284</p>","tags":["industrial-robotics","human-robot-collaboration","people-with-disabilities"]},{"location":"publications/19_01_apz_40_cps/","title":"Wie cyber-physische Systeme zu autonomer Produktion f\u00fchren","text":"<p>Brandon K. Sai, Matthias Schneider, Christian Henkel, Felipe Garcia Lopez und Fady Aziz in wt Werkstattstechnik online</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.37544/1436-4980-2019-03</p>","tags":["industrial-robotics","cyber-physical-systems","industry-4.0","manufacturing"]},{"location":"publications/19_01_aquias_arbeit_digital/","title":"Der digitale Arbeitsplatz in der Produktion: Herausforderungen und Chancen","text":"<p>Christian Henkel, Sebastian Rentsch, Miriam Funk und David Kremer in Arbeit der Zukunft: Digital, multilokal, dynamisch</p> <p>\ud83d\udcc4 pdf</p>","tags":["first-author","manufacturing"]},{"location":"publications/19_02_aquias_zfa/","title":"Mensch-Roboter-Kollaboration f\u00fcr schwerbehinderte Produktionsmitarbeiter","text":"<p>David Kremer, Sibylle Hermann, Matthias Schneider, Christian Henkel @ Zeitschrift f\u00fcr Arbeitswissenschaft</p> <p>\ud83d\udd17 doi: 10.1007/s41449-019-00147-0</p>","tags":["human-robot-collaboration","people-with-disabilities"]},{"location":"publications/19_11_tcbs/","title":"An optimal algorithm to solve the combined task allocation and path finding problem","text":"<p>Christian Henkel, Jannik Abbenseth, Marc Toussaint @ IROS 2019</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1109/IROS40897.2019.8968096</p>","tags":["first-author","multi-agent-systems","navigation"]},{"location":"publications/19_11_tcbs/#abstract","title":"Abstract","text":"<p>We consider multi-agent transport task problems where, e.g. in a factory setting, items have to be delivered from a given start to a goal pose while the delivering robots need to avoid collisions with each other on the floor. We introduce a Task Conflict-Based Search (TCBS) Algorithm to solve the combined delivery task allocation and multi-agent path planning problem optimally. The problem is known to be NP-hard and the optimal solver cannot scale. However, we introduce it as a baseline to evaluate the sub-optimality of other approaches. We show experimental results that compare our solver with different sub-optimal ones in terms of regret.</p>","tags":["first-author","multi-agent-systems","navigation"]},{"location":"publications/19_11_tcbs/#links","title":"Links","text":"<ul> <li>Paper</li> <li>Code</li> </ul>","tags":["first-author","multi-agent-systems","navigation"]},{"location":"publications/19_11_tcbs/#presentation","title":"Presentation","text":"","tags":["first-author","multi-agent-systems","navigation"]},{"location":"publications/19_11_tcbs/#bibtex","title":"BibTeX","text":"<pre><code>@misc{henkel2019optimal,\n    title={An Optimal Algorithm to Solve the Combined Task Allocation and Path Finding Problem},\n    author={Christian Henkel and Jannik Abbenseth and Marc Toussaint},\n    year={2019},\n    eprint={1907.10360},\n    archivePrefix={arXiv},\n    primaryClass={cs.RO}\n}\n</code></pre>","tags":["first-author","multi-agent-systems","navigation"]},{"location":"publications/20_03_odrm/","title":"Optimized directed roadmap graph for multi-agent path finding using stochastic gradient descent","text":"<p>Christian Henkel, Marc Toussaint @ SAC 2020</p> <p></p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1145/3341105.3373916</p>","tags":["first-author","multi-agent-systems","navigation","roadmap-graphs"]},{"location":"publications/20_03_odrm/#abstract","title":"Abstract","text":"<p>We present a novel approach called Optimized Directed Roadmap Graph (ODRM). It is a method to build a directed roadmap graph that allows for collision avoidance in multi-robot navigation. This is a highly relevant problem, for example for industrial autonomous guided vehicles. The core idea of ODRM is, that a directed roadmap can encode inherent properties of the environment which are useful when agents have to avoid each other in that same environment. Like Probabilistic Roadmaps (PRMs), ODRM's first step is generating samples from C-space. In a second step ODRM optimizes vertex positions and edge directions by Stochastic Gradient Descent (SGD). This leads to emergent properties like edges parallel to walls and patterns similar to two-lane streets or roundabouts. Agents can then navigate on this graph by searching their path independently and solving occurring agent-agent collisions at run-time. Using the graphs generated by ODRM compared to an non-optimized graph significantly fewer agent-agent collisions happen. We evaluate our roadmap with both, centralized and decentralized planners. Our experiments show that with ODRM even a simple centralized planner can solve problems with high numbers of agents that other multi agent planners can not solve. Additionally, we use simulated robots with decentralized planners and online collision avoidance to show how agents are a lot faster on our roadmap than on standard grid maps.</p>","tags":["first-author","multi-agent-systems","navigation","roadmap-graphs"]},{"location":"publications/20_03_odrm/#links","title":"Links","text":"<ul> <li>Paper</li> <li>Code</li> </ul>","tags":["first-author","multi-agent-systems","navigation","roadmap-graphs"]},{"location":"publications/20_03_odrm/#presentation","title":"Presentation","text":"","tags":["first-author","multi-agent-systems","navigation","roadmap-graphs"]},{"location":"publications/20_03_odrm/#bibtex","title":"BibTeX","text":"<pre><code>@inproceedings{Henkel2020,\n    author = {Henkel, Christian and Toussaint, Marc},\n    title = {Optimized Directed Roadmap Graph for Multi-Agent Path Finding Using Stochastic Gradient Descent},\n    booktitle = {The 35th ACM/SIGAPP Symposium on Applied Computing (SAC '20)},\n    address = {Brno, Czech Republic},\n    isbn = {978-1-4503-6866-7/20/03},\n    doi = {10.1145/3341105.3373916},\n    keywords = {Multi-agent planning,Multi-agent systems,Robotic autonomy},\n    year = {2020}\n}\n</code></pre>","tags":["first-author","multi-agent-systems","navigation","roadmap-graphs"]},{"location":"publications/20_06_ant_colony/","title":"Ant colony optimization based multi-robot planner for combined task allocation and path finding","text":"<p>Agha Ali Haider Qizilbash, Christian Henkel, Sanaz Mostaghim @ UR 2020</p> <p>\ud83d\udd17 doi: 10.1109/UR49135.2020.9144944</p>","tags":["multi-agent-systems","navigation"]},{"location":"publications/24_10_gsrm/","title":"GSRM: Building Roadmaps for Query-Efficient and Near-Optimal Path Planning Using a Reaction Diffusion System","text":"<p>Christian Henkel, Marc Toussaint, Wolfgang H\u00f6nig @ IROS 2024</p> <p></p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1109/IROS58592.2024.10801293</p>","tags":["first-author","navigation","roadmap-graphs"]},{"location":"publications/24_10_gsrm/#abstract","title":"Abstract","text":"<p>Mobile robots frequently navigate on roadmaps, i.e., graphs where edges represent safe motions, in applications such as healthcare, hospitality, and warehouse automation. Often the environment is quasi-static, i.e., it is sufficient to construct a roadmap once and then use it for any future planning queries. Roadmaps are typically used with graph search algorithm to find feasible paths for the robots. Therefore, the roadmap should be well-connected, and graph searches should produce near-optimal solutions with short solution paths while simultaneously be computationally efficient to execute queries quickly. We propose a new method to construct roadmaps based on the Gray-Scott reaction diffusion system and Delaunay triangulation. Our approach, GSRM, produces roadmaps with evenly distributed vertices and edges that are well-connected even in environments with challenging narrow passages. Empirically, we compare to classical roadmaps generated by 8-connected grids, probabilistic roadmaps (PRM, SPARS2), and optimized roadmap graphs (ORM). Our results show that GSRM consistently produces superior roadmaps that are well-connected, have high query efficiency, and result in short solution paths.</p>","tags":["first-author","navigation","roadmap-graphs"]},{"location":"publications/24_10_gsrm/#links","title":"Links","text":"<ul> <li>Paper</li> <li>Code</li> </ul>","tags":["first-author","navigation","roadmap-graphs"]},{"location":"publications/24_10_gsrm/#presentation","title":"Presentation","text":"","tags":["first-author","navigation","roadmap-graphs"]},{"location":"publications/24_10_gsrm/#bibtex","title":"BibTeX","text":"<pre><code>@misc{henkel2024gsrmbuildingroadmapsqueryefficient,\n      title={GSRM: Building Roadmaps for Query-Efficient and Near-Optimal Path Planning Using a Reaction Diffusion System},\n      author={Christian Henkel and Marc Toussaint and Wolfgang H\u00f6nig},\n      year={2024},\n      eprint={2410.11024},\n      archivePrefix={arXiv},\n      primaryClass={cs.RO},\n      url={https://arxiv.org/abs/2410.11024},\n}\n</code></pre>","tags":["first-author","navigation","roadmap-graphs"]},{"location":"publications/24_11_convince_aaai/","title":"Towards a Verifiable Toolchain for Robotics","text":"<p>Charlie Street et al. @ AAAI Fall Symposium 2024</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1609/aaaiss.v4i1.31823</p>","tags":["software-engineering","formal-methods"]},{"location":"publications/24_11_convince_delibws_roscon24/","title":"Results of the ROSCon24 Workshop Survey 'Hands-on with ROS2 Deliberation Technologies","text":"<p>Christian Henkel, Sebastian Castro, Davide Faconti, David Oberacker, David Conner, Matthias Mayr, Ginny Chen-Joergensen, Michaela Klauck @ ERF 2024</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.5281/zenodo.13382222</p>","tags":["software-engineering","ros","deliberation"]},{"location":"publications/25_01_convince_erf/","title":"Towards Robust Autonomous Robots Using Statistical Model Checking","text":"<p>Michaela Klauck, Ralph Lange, Christian Henkel, Selma Kchir &amp; Matteo Palmas @ ERF 2024</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.1007/978-3-031-76424-0_25</p>","tags":["software-engineering","formal-methods"]},{"location":"publications/25_04_convince_bt_semantics/","title":"Execution Semantics of Behavior Trees in Robotic Applications","text":"<p>Enrico Ghiorzi, Christian Henkel, Matteo Palmas, Michaela Klauck, Armando Tacchella @ arXiv</p> <p>\ud83d\udcc4 pdf \ud83d\udd17 doi: 10.48550/arXiv.2408.00090)</p>","tags":["behavior-trees"]},{"location":"thinkoneering/25_01_oss_identity/","title":"How do Personal and Company Identities Shape Open Source Contributions?","text":"<p>Imagine that you are a maintainer of a widely used open source project relied upon by developers worldwide. Being a maintainer means, that you get to decide which contributions by external contributors get accepted. Now, there are two contributions. One from an individual contributor and one from a person that you know works for a certain company. You know that the individual contributor has worked on the code they are contributing in their free time and you really like the quality of their work. The other contribution is also of high quality. Would you treat these contributions differently? Should you?</p> <p></p> <p>Technically both of these are just persons contributing code. But can you truly ignore the fact that one contributor belongs to a company, or do you even attribute their contribution primarily to that company? A recent survey by the Linux Foundation found that organizations contribute 7.7B USD annually to open source projects and that 86% of that is contributed in the form of labor by individuals<sup>2</sup>. I am interested in the role that individual and company identities play in open source contributions.</p> <p>To explore the topic, I will first provide background on Open Source Software and an overview of identity theory at both individual and collaborative levels. Then I look at the nature of individual contributions in OSS, their motivations, and the role of community and meritocracy. In contrast, I will explore how and why companies contribute to OSS and compare this to individual and community contributions. Comparing these I then identify key challenges and tensions between individual contributors and companies. Using the previously introduced organizational identity theory, some interesting insights can be gained. I then want to give some practical examples that I observed working in ROS.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#context-open-source-software-identity-theory","title":"Context: Open Source Software, Identity Theory","text":"<p>Open source in its basic form means that the source code of a piece of software is available freely for anyone to analyze, modify, or share. In practice, there are different licenses that are published with the source code, each with somewhat different rights and duties associated to them. But this is not what I will talk about today. What makes open source so powerful is that this free access to source code allows for truly open collaboration. Eric S. Raymond described this in two contrasting models of software development of the \"Bazaar\" and the \"Cathedral\". Here, the Bazaar refers to the way software is developed in open source projects: openly and collaboratively, with many contributors. The Cathedral model, on the other hand, symbolizes classic software development: closed within commercial development projects by a few experts. Raymond argues that the Bazaar model is more effective for creating robust and innovative software<sup>3</sup>.</p> <p>For transparency reasons, I want to declare that my analysis of these topics is influenced primarily by my personal experience in one open source project and that is ROS, the Robot Operating System. It is an amazing framework for building robots, but its technical details will not be of further relevance for this article.</p> <p>Before exploring OSS projects further, though, I want to introduce the tool for this exploration: identity. Generally speaking, identity is the relation an entity has to itself<sup>4</sup>. Locke made clear that it is fundamentally consciousness what allows for personal identity. This consciousness can be extended backwards to past actions or thoughts<sup>5</sup><sup>6</sup>. While this is a fundamental building block for identity, it alone will not help explain what I am interested in.</p> <p>A more modern take is social identity. It is \"a person\u2019s sense of who they are based on their group membership(s)\"<sup>7</sup>. Knowing this can give people a sense of belonging, purpose, self-worth, and crucially identity. In practice, these groups can be defined by anything from ethnicity or religion to professional affiliation or musical preference<sup>7</sup><sup>8</sup>. This can also explain aspects of how individuals identities are based on them being employed by a company. However, I have one last section on corporations in particular.</p> <p>When companies refer to themselves, it is called organizational identity. Firstly, organizations are more than a collection of individual identities. French argues that organizations as a whole have morality. Basically, because they have intentionality and responsibility<sup>9</sup>. When thinking about a company, then it is their capability to make decisions that leads to that intentionality. A organization needs an identity to make these decisions. And similarly to how we saw with Locke above, this is based on its own history but also by reference to a self-assigned organization type<sup>10</sup>. I think this is very interesting and can be used to explain many phenomena perceived when working in companies. But for now, this is enough background, and next I want to look at the nature of open source contributions in some more detail.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#individual-contributions-in-oss","title":"Individual Contributions in OSS","text":"<p>Why do individuals contribute to open source? I think the core motivations are intrinsic. The inherent passion for programming and development is not to be underestimated. However, these OSS projects are also communities, and being involved in that can be very motivational. As we learned from social identity, belonging to a group is an ingredient to one's own identity<sup>8</sup>.</p> <p>Further, extrinsic motivations also play a role. This includes one's own career advancement, because contribution to open source makes the individual visible and can create a reputation that may be useful when looking for a job. External recognition can also serve as a more general motivating factor. Feeling seen as a valuable contributor increases one's self-worth.</p> <p>I think this quote summarizes it well</p> <p>[Motivations include] both extrinsic, enhancing reputation and developing human capital and social networks; and intrinsic, satisfying psychological needs, pleasure, and a sense of social belonging.<sup>11</sup></p> <p>While I talked about recognition as one source of motivation, recognition does also serve a different purpose in open source projects: power. Open source projects are often described as meritocracies. Interestingly, the term was popularized by a dystopian book called The rise of the meritocracy by Michael Young<sup>12</sup>. In it, the envisioned future society based on meritocracy has many problems, maybe the biggest being a lack of social mobility. Careful analysis can disprove the negative effects of meritocracy that Young envisioned in 1958<sup>13</sup>. So today, meritocracy is generally considered a desirable political system.</p> <p>Political systems look at how power is distributed, and in meritocracy the idea is that power is awarded based on merit. It is that merit that individual developers accumulate by contributing to open source projects. With that, they will gain influence in the project's hierarchy. This generally allows for more technically informed decisions, assuming that those that contributed to a project a lot also have a clear idea about its inner workings. There is an obvious contrast to how power is organized in companies, where decisions are generally by those that are hierarchically entitled to make them, but may not necessarily have the relevant technical insights. This is not to say that in companies no technically informed decisions are made, but that the role and potential influence of individual engineers is different to that in open source projects. In my opinion and experience, this is also a reason people contribute to open source projects.</p> <p>Note that arguments can be made that hierarchical structures in the governance of many OSS projects may also bring them closer to rigid structures of companies<sup>14</sup>. However, this does not match my personal anecdotal evidence from working in ROS. While this may be different from project to project, the topic is generally of course not a precise binary difference. But despite differences in the ways decisions are made, companies also have a lot of reasons to engage in open source, and this is what I want to look at next.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#company-contributions-to-oss","title":"Company Contributions to OSS","text":"<p>Why are companies interested in open source? On a first analysis it may seem counterintuitive for a company that is generally interested in financial success to have in interest in improving software that must ultimately be and remain free to use and that is further shared with all of their direct competitors. But it has been observed by many, that while historically it was individuals that primarily contributed to open source it is now companies<sup>3</sup><sup>14</sup><sup>15</sup>. Why is that?</p> <p>A first motivation is Quality. Eric S. Raymond introduced Linus's law as \"given enough eyeballs, all bugs are shallow\" which is named after Linus Torvalds<sup>3</sup>. And this certainly makes sense, that if more people look at a given code, the better its quality will eventually be. I would argue that this can also be attributed to how open source communities work. As anyone having worked in big development projects knows, having too many engineers will not automatically produce quality software. However, I argue that it is also the organization of a diverse bunch of intrinsically motivated engineers in meritocratic structures that leads to the constant improvement of software quality. But the promise of quality cannot be the only motivation for companies investing that 7.7B USD annually in open source projects<sup>2</sup>.</p> <p>It gets really interesting to look at Innovation. Historically, it would be considered an inherent task of a company to create innovation themselves. However, the ever increasing advancement of the technical state of the art can make it challenging to keep up with that, let alone extending it through innovation. OSS helps here by leveling the playing field. When the state of the art is available for everyone to use, it is not necessary to reinvent the wheel. Individual companies can focus their development teams to invest on what they think is innovative. This is also what makes these projects hugely interesting for smaller companies, because the described effects are even more pronounced for them.</p> <p>If companies build their innovatability, and therefore sometimes their whole business model, on open source software, it is natural that they have an interest in the welfare of the associated OSS project. That is why many companies support such projects monetarily. However, this dependence also motivates the desire for influence. Long-term strategic influence is often granted by the OSS project in return for the financial support. For short-term technical influence, it is often also in the interest of companies to pay their developers to actively contribute to the software. This influence can also be more targeted, but often requires building up contributors with the necessary influence long term<sup>16</sup>. A very interesting point in the survey by the Linux Foundation was that many respondents were relatively more knowledgeable about the size of their financial contributions than about the contribution through labour<sup>2</sup>.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#challenges-and-tensions","title":"Challenges and Tensions","text":"<p>At first sight, this seems like a mutually beneficial relationship: engineers want to contribute, companies let them do it and gain influence. However, this also bears challenges. For example, it is not easy for companies to know which influence they want or need in the long term. It can also be challenging for an engineer that sees the requirement for such influence to convince their employer to take the necessary investments. Here, it is interesting to think about to which identity this merit will then be linked: that of the company or that of the individual engineer? From my experience, it is often the individual, up to a degree where these people take their merit with them when they change jobs. This is obviously not in the interest of companies having specifically invested in that person and project. However, through careful long-term OSS strategy work, it is also very much feasible for companies to accumulate merit and not lose it on personnel changes.</p> <p>Another very real challenge for individual contributors and maintainers highlighted by Nadia Eghbal and others is that of burnout<sup>17</sup><sup>18</sup>. This phenomenon may well be inherent to insufficient governance in OSS project management. Especially at risk of burnout ate maintainers that fill positions that are very tailored to their person and/or skillset. Effective governance would define processes to distribute their workload to more people or find people to step in in case they need to take a break or attend to personal duties. Often times, it also simply unlikely to find someone else taking over that person's position. If they are doing a good job, no one will contest their position, and if their workload is perceived as basically more than a fulltime job, this gets even less likely. The relation to company identities is weaker here: The described phenomenon usually applies to individuals where their identity is a lot more relevant to their success than the one of their company, if that is even relevant at all. However, it bears a tragic reality that many other companies are depending on that person's work without being able to ensure their proper working conditions. Now, I think we can look more closely at these challenges with some more identity theory.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#organizational-identity-theory-applied-to-oss","title":"Organizational Identity Theory Applied to OSS","text":"<p>An interesting aspect in the Whetten article is that organizational identities are more fluid than personal identities. That is at least what I take from it, and it makes sense, because as a person I rely on that identity much more and it can cause a serious crisis if it is challenged or changes too extremely. However, identities of companies will be challenged more frequently and are often only properly defined in events of change or crisis<sup>10</sup>. This explains how merit in OSS is more strongly attributed to individual identities if they are more constant. However, it is also visible that a necessary condition for allocation of merit to corporations requires a strong organizational identity. This is of course also influenced by the individual identities of engineers being affiliated with those corporations in public contexts like OSS projects.</p> <p>Another interesting link can be drawn from the argument of French for the morality of corporations<sup>9</sup>. If someone claims that companies using open source software ought to give back contributions in return, that is a moral statement. This would gain or lose validity based on the attribution of morality to companies. Before reading French's article, I would not have personally assumed companies to be moral. Furthermore, I also did not think of morality as very relevant in the context of companies contributing (or not) to open source. However, I think we can learn something from applying French's argument to open source: The argument is based on intentionality and responsibility. This makes intuitive sense to me, that I can only be morally accountable for actions that I did both intentionally and are responsible for. When we apply this to a company that intends to use open source software and is responsible for that usage, only then would they be morally obliged to contribute back. What happens without intentionality is interesting: If the organization did not intend to use that open source code, for example because one employee decided to use it without getting proper approval, it does not necessarily entail the moral need for a decision on company level to contribute back. And for responsibility, we could consider the example of a company not being responsible for their usage of a given open source software, maybe because they are forced to use it by another business partner, then I can also follow the argument that they would not be morally obliged to contribute back. It is very fascinating to me how clearly attributes like morality that are well understood for individual agents can be applied to organizations. Here, open source works as a great example that helps to clarify these ideas.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#case-studies-and-examples","title":"Case Studies and Examples","text":"<p>To make these points even more graspable, I would like to add some practical examples that I observed in ROS. One aspect that I don't know how unique it is in comparison to other projects is the prevalence of small companies or contributors that have their own freelance business. This serves on the one hand as an interesting lens on the morality of companies, which is even easier to believe the closer a company is to a single individual. On the other hand, it also highlights the importance of individual contributors in OSS. Many of these companies are not only small but also constantly changing, which makes the people a more constant aspect of the community than their companies. Here, I have an observation that would disagree with Schrape writing that \"companies and other organizations are able to bring in their resources more continuously and consistently than individual contributors\"<sup>14</sup>. In ROS, and particularly in Nav2, we have witnessed quite a few companies discontinuing their contributions while the involvement of the relevant individuals seem a lot more stable and consistent<sup>19</sup><sup>20</sup>.</p> <p>On the relevance and importance of identities for the work in open source, I came across a Stack Overflow discussion, where a person asks whether it would be feasible to contribute everything their company does from one GitHub account<sup>21</sup>. The consensus of the answers is that this is a bad idea for multiple reasons, one of them being the integral relevance of personal communication in OSS communities. There is also a nice blog post by Jono Bacon on whether anonymous OSS contributions are a good idea, coming to the conclusion that identities in OSS are important for reasons of meritocracy, accountability, and openness<sup>22</sup>. These are valid points for the relevance of individual identities in open source from very practical perspectives.</p> <p>However, there is also an interesting example for organizational identities on a level that we did not consider thus far. That example is interestingly enough the ROS community itself. We can apply what we learned about the necessity for discussion about an organisational identity and the potential for kickstarting that discussion through big changes and the threat of loss of identity. The example is, of course, the acquisition of big parts of Open Robotics by Intrinsic in 2022<sup>23</sup>. This led to many discussions in the ROS community<sup>24</sup> and ultimately to the foundation of its new governance organization Open Source Robotics Alliance OSRA<sup>25</sup>. So I read this as an example for ROS as an organization losing its identity through the Intrinsic acquisition and the subsequent redefinition of its own identity ending in a clearer and better understood identity than it had before. And only this new identity could have led to the strong stand the OSRA has today.</p>","tags":["open-source"]},{"location":"thinkoneering/25_01_oss_identity/#conclusion","title":"Conclusion","text":"<p>The key takeaways that could be useful from this article are:</p> <ul> <li> <p>Tension Between Individual and Organizational Merit: Contributions in open source projects are often tied to individual identities rather than the companies they represent. To utilize this as a company, a strong open source strategy is needed.</p> </li> <li> <p>Meritocracy vs. Hierarchy: Open source projects often operate as meritocracies, where influence is earned through contributions. However, the project's governance also contains elements of classical hierarchies. This balance is crucial.</p> </li> <li> <p>Dual Motivations for Contributions: Individuals are driven by both intrinsic factors, such as passion for development and community belonging, and extrinsic factors, like career advancement and reputation. Companies, however, are motivated by goals like quality improvement, innovation, and long-term influence over open source projects.</p> </li> <li> <p>Role of Organizational Identity: Companies can establish their identity within the open source community through consistent and intentional contributions, which helps build trust and influence over time.</p> </li> <li> <p>Governance Challenges in Open Source: Burnout among maintainers highlights the need for better governance structures in open source projects, such as processes to distribute workloads and ensure continuity, which may differ significantly from corporate project management practices.</p> </li> </ul> <ol> <li> <p>Big thanks to Maximilian Ro\u00dfmann and Sebastian Castro for refining both the content and language - couldn\u2019t have done it without you!\u00a0\u21a9</p> </li> <li> <p>Boysel, Sam, Frank Nagle, Hilary Carter, Anna Hermansen, Kevin Crosby, Jeff Luszcz, Stephanie Lincoln, Daniel Yue, Manuel Hoffmann, and Alexander Staub. 2024. \u201c2024 Open Source Software Funding Report.\u201d https://opensourcefundingsurvey2024.com/.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Raymond, Eric S. 2001. The Cathedral   &amp; the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary. 1st edition. Oxford, United Kingdom: O\u2019Reilly Media.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Noonan, Harold, and Ben Curtis. 2022. \u201cIdentity.\u201d In The Stanford Encyclopedia of Philosophy, edited by Edward N. Zalta and Uri Nodelman, Fall 2022. Metaphysics Research Lab, Stanford University. https://plato.stanford.edu/archives/fall2022/entries/identity/.\u00a0\u21a9</p> </li> <li> <p>Locke, John. 1694. \u201cAn Essay Concerning Human Understanding.\u201d\u00a0\u21a9</p> </li> <li> <p>Gordon-Roth, Jessica. 2020. \u201cLocke on Personal Identity.\u201d In Stanford Encyclopedia of Philosophy, Spring 2020. https://plato.stanford.edu/entries/locke-personal-identity/.\u00a0\u21a9</p> </li> <li> <p>Turner, J. C., R. J. Brown, and H. Tajfel. 1979. \u201cSocial Comparison and Group Interest in Ingroup Favouritism.\u201d European Journal of Social Psychology 9 (2): 187\u2013204. https://doi.org/10.1002/ejsp.2420090207.\u00a0\u21a9\u21a9</p> </li> <li> <p>\u201cSocial Identity Theory In Psychology (Tajfel   &amp; Turner, 1979).\u201d 2023. https://www.simplypsychology.org/social-identity-theory.html.\u00a0\u21a9\u21a9</p> </li> <li> <p>French, Peter A. 1979. \u201cThe Corporation as as Moral Person.\u201d AMERICAN PHILOSOPHICAL QUARTERLY 16 (3): 5\u201313. http://www.jstor.org/stable/20009760?origin=JSTOR-pdf.\u00a0\u21a9\u21a9</p> </li> <li> <p>Whetten, David A. 2006. \u201cAlbert and Whetten Revisited: Strengthening the Concept of Organizational Identity.\u201d Journal of Management Inquiry 15 (3): 219\u201334. https://doi.org/10.1177/1056492606291200.\u00a0\u21a9\u21a9</p> </li> <li> <p>Benkler, Yochai. 2004. \u201cCommons-Based Strategies and the Problems of Patents.\u201d Science 305 (5687): 1110\u201311. https://doi.org/10.1126/science.1100526.\u00a0\u21a9</p> </li> <li> <p>Young, Michael. 1958. The Rise of the Meritocracy. https://www.taylorfrancis.com/books/mono/10.4324/9781315134642/rise-meritocracy-michael-young.\u00a0\u21a9</p> </li> <li> <p>Allen, Ansgar. 2011. \u201cMichael Young\u2019s The Rise of the Meritocracy : A Philosophical Critique.\u201d British Journal of Educational Studies 59 (4): 367\u201382. https://doi.org/10.1080/00071005.2011.582852.\u00a0\u21a9</p> </li> <li> <p>Schrape, Jan-Felix. 2018. \u201cOpen Source Communities: The Sociotechnical Institutionalization of Collective Invention.\u201d In Collectivity and Power on the Internet, 57\u201383. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-78414-4\\4.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>\u201cThe Evolution of Open Source Contributors: From Hobbyists to Professionals.\u201d n.d. Accessed January 1, 2025. https://www.redhat.com/en/blog/evolution-open-source-contributors-hobbyists-professionals.\u00a0\u21a9</p> </li> <li> <p>\u201cParticipating in Open Source Communities.\u201d n.d. Accessed January 1, 2025. https://www.linuxfoundation.org/resources/open-source-guides/participating-in-open-source-communities.\u00a0\u21a9</p> </li> <li> <p>Nadia Eghbal. 2020. Working in Public: The Making and Maintenance of Open Source Software. San Francisco: Stripe Press.\u00a0\u21a9</p> </li> <li> <p>\u201cWhy Contributing to Open Source Is Scary and How to Contribute Anyway Authentik.\u201d n.d. Accessed January 1, 2025. https://goauthentik.io/blog/2024-03-07-why-contributing-to-open-source-is-scary/.\u00a0\u21a9</p> </li> <li> <p>\u201cNavigation2 WG Changes and HELP WANTED - Next Generation ROS.\u201d 2021. ROS Discourse. https://discourse.ros.org/t/navigation2-wg-changes-and-help-wanted/12348.\u00a0\u21a9</p> </li> <li> <p>\u201c[Nav2] A Time for Change - General.\u201d 2021. ROS Discourse. https://discourse.ros.org/t/nav2-a-time-for-change/30525.\u00a0\u21a9</p> </li> <li> <p>\u201cContributor - Contributing as a Company - Open Source Stack Exchange.\u201d n.d. Accessed January 1, 2025. https://opensource.stackexchange.com/questions/9763/contributing-as-a-company.\u00a0\u21a9</p> </li> <li> <p>\u201cAnonymous Open Source Projects - Jono Bacon.\u201d 2017. https://www.jonobacon.com/2017/04/28/anonymous-open-source-projects/.\u00a0\u21a9</p> </li> <li> <p>\u201cAlphabet\u2019s Intrinsic Acquires Majority of Open Robotics - IEEE Spectrum.\u201d n.d. Accessed January 24, 2025. https://spectrum.ieee.org/alphabet-intrinsic-open-robotics-acquisition.\u00a0\u21a9</p> </li> <li> <p>\u201cQuestions about the Intrinsic Acquisition of OSRC.\u201d n.d. ROS Discourse. Accessed January 24, 2025. https://discourse.ros.org/t/questions-about-the-intrinsic-acquisition-of-osrc/28763.\u00a0\u21a9</p> </li> <li> <p>\u201cAnnouncing the Open Source Robotics Alliance.\u201d n.d. Open Robotics. Accessed January 24, 2025. https://www.openrobotics.org/blog/2024/3/18/announcing-the-open-source-robotics-alliance-osra.\u00a0\u21a9</p> </li> </ol>","tags":["open-source"]},{"location":"thinkoneering/25_02_swe_creativity/","title":"On Creativity in Software Engineering and the Role of Generative AI","text":"<p>If one were to ask people on the street to name creative jobs, I would not expect software development to be mentioned very often. On the other hand, there are many tasks and activities in the daily work of a software developer that seem very creative to me. I would also describe myself as creative and developing software can be an outlet for this creativity.</p> <p>In this article I want to explore if software engineering is creative. But this is not only a question of categorization. I want to use this exploration to get a deeper understanding of what creativity is. And I also want to think about the effect of GenAI on the work of software engineers and their creativity.</p>","tags":["software-engineering"]},{"location":"thinkoneering/25_02_swe_creativity/#what-is-creativity","title":"What is creativity?","text":"<p>A very basic definition of creativity involves originality and effectiveness<sup>1</sup>. So, being creative means coming up with something new that is effective towards a goal. For example, a random process could come up with something original. But this would then not be considered creative because it is not effective towards a given goal. For me this definition makes creativity already more graspable, moving it away from a mysterious property that only artists have towards something that could be useful when developing software.</p> <p>In psychology this is a well-researched concept. Researchers often have the implicit or explicit goal of finding out how to improve people's creativity in order to solve big problems of our world. But before we investigate that, the definition above still feels somewhat simplistic and too broad to capture everything from Leonardo Da Vinci painting the Mona Lisa to me designing the logo for this blog. Kaufman and Beghetto propose a model to differentiate these<sup>2</sup>. They would call one of these Big-C creativity and the other one little-c. They also critique their field for focusing too narrowly: either on Big-C creativity by interviewing top creators in their fields, or on little-c creativity through studies on students and children in everyday contexts. That's why they introduce two additional forms of creativity: Mini-c, the</p> <p>novel and personally meaningful interpretation of experiences, actions, and events<sup>3</sup>.</p> <p>And Pro-c, which is the creativity of those that perform a task on a professional level. This concludes their Four C Model<sup>2</sup>:</p> <ul> <li>Big-C: Creativity of genius top-of-the-field artists.</li> <li>little-c: Everyday creativity necessary in daily activities.</li> <li>Mini-c: Personal and meaningful interpretation of experiences and learning.</li> <li>Pro-c: Professional-level creativity from experience in a specific domain.</li> </ul> <p>For us, thinking about software engineering, this is very useful, because neither Big-C nor little-c seemed to fit what we are interested in. I think the type of creativity that works for engineers must be Pro-c. So, it is good to learn that psychology research had a bucket for the creativity of us engineers. But there is also research that explicitly looks at us.</p>","tags":["software-engineering"]},{"location":"thinkoneering/25_02_swe_creativity/#creativity-in-software-engineering","title":"Creativity in Software Engineering","text":"<p>A qualitative study interviewed engineers to clarify the role and extent of creativity in software engineering. The participants agree</p> <p>that being creative is a requirement to successfully tackle complex problems<sup>4</sup></p> <p>But they also state, quoting another participant, that</p> <p>\u2018Creativity is the means, not the goal.\u2019<sup>4</sup></p> <p>Other authors also used interviews but go deeper in their analysis. They think about how creativity may be defined specifically in software engineering. They make the interesting observation on why the word creative is barely used in this context:</p> <p>This is perhaps not because software isn\u2019t creative but because creativity in software engineering might look different than in other domains<sup>5</sup></p> <p>And they identify three key themes of creativity in SWE:</p> <ol> <li>Collaboration fosters creativity</li> <li>Both individuals and teams do problem-solving by learning and exploration as basis for creativity</li> <li>Reuse and recombination of existing code<sup>5</sup></li> </ol> <p>These are interesting new aspects, that also help when thinking about how to increase creativity. Note that point 2 aligns with previously introduced Mini-c, indicating that my perceived relevance of Pro-c may not be the whole truth. Very central to that paper is the perception of creativity as reuse. This seems to be one of the ways creativity in SWE may look different from commonly perceived creativity.</p>","tags":["software-engineering"]},{"location":"thinkoneering/25_02_swe_creativity/#common-sense-understanding-of-creativity","title":"Common Sense Understanding of Creativity","text":"<p>Using the background on creativity, I want to look at the initial confusion: Why do people generally not consider engineers to be creative?</p> <p>What are occupations that are considered creative? I assume most of these actually relate to art and artists. My hypothesis is, that what people think of is primarily Big-C. And going back to Leonardo Da Vinci, while he was a brilliant engineer, the public primarily knows him for his paintings. But what is the difference between painting and programming? If both are considered creative, then\u2014as we established\u2014they must involve originality and effectiveness. And I think the biggest difference here lies in the effectiveness: While engineering effectiveness is measured against solving a concrete problem, the effectiveness in creative art is harder to grasp for me. How is art effective?</p> <p>Firstly, there is an aesthetic aspect. Successful art is often considered beautiful by many. However, I doubt that a painting being merely pleasant to look at would achieve the same recognition as the Mona Lisa. That's why secondly, there is artistic expression. In my opinion, good art must be effective in the sense of conveying a message, evoking emotions or enabling reflection. Everything else is merely entertainment.</p> <p>So, the most relevant difference between creativity in art, which is also the common understanding of creativity, and the creativity in software engineering is the goal. And with different goals, the effectiveness of the art is measured differently. While the goal in art is self-expression and beauty, the goal in engineering is solving problems. This is why in the public; creativity is often associated with art and with a degree of self-expression.</p>","tags":["software-engineering"]},{"location":"thinkoneering/25_02_swe_creativity/#what-creativity-looks-like-in-software-engineering","title":"What Creativity Looks Like in Software Engineering","text":"<p>In the previously quoted paper, the special nature of creativity in SWE was identified as recombination of existing solutions. I think that this is an important aspect but doubt that it explains the core of this confusion. However, leaning into this idea, the recombination of existing solutions becomes particularly interesting in the context of open source software. If innovation is sped up through open source software<sup>6</sup>, and reuse is central to creativity in SWE, then usage of open source enables innovation through creative reuse. So, reuse and recombination are central aspects of creativity in SWE.</p> <p>But I am skeptical that it can explain the difference to creativity in art, though. If we for example consider improvisation in jazz, then recombination of existing themes, phrases and what's called licks is crucial. While a jazz performance can seem random at first sight, it is always a clever recombination and variation of that what others have played before. This concept is not too different from a software engineer using libraries and implementing pre-defined algorithms to accomplish a specific technical goal. For example, Adorno sees the strength of technology in its contrast to the humanities: technology draws from a predefined set of existing techniques, whereas the humanities lack such a set of typical solutions<sup>7</sup>.</p> <p>So, to summarize, while I agree that recombination is an important aspect of creativity in SWE, it is not the main difference to creativity in other fields or in common sense understanding of the phrase. The lack of common-sense identification for engineering as creative comes from</p> <ol> <li>Most people thinking of creativity predominantly as Big-C, the creativity of genius top-of-the-field artists.</li> <li>And from different goals: Artistic creativity follows the goal of aesthetics and self-expression while engineering follows the goal of problem-solving.</li> </ol> <p>Nevertheless, both are creative when considering the typical definition involving originality and effectiveness. And the fact that the public does not consider software engineers to be creative may say more about them not knowing an awful lot about what we do than this question. This may also be the reason that many people think that all of us will be replaced by AI soon. While, GenAI undoubtedly has a huge impact on our work, this topic deserves a closer look.</p>","tags":["software-engineering"]},{"location":"thinkoneering/25_02_swe_creativity/#the-influence-of-generative-artificial-intelligence-on-creativity-in-swe","title":"The Influence of Generative Artificial Intelligence on Creativity in SWE","text":"<p>A lot has been said about the impact of GenAI on art<sup>8</sup><sup>9</sup>. And I very much share the feeling that AI doing creative tasks is the wrong direction, because I would much prefer to be creative and have AI take over the chores<sup>10</sup>. But is this also true for the use in SWE? Are we at the risk of having GenAI take all the joy out of programming? From my personal experience, at least with current tools, the opposite is true. For example, Copilot in Vscode is quite good at the boring parts of programming. If I make some change to one variable, it can extend that for the remaining variables.</p> <p>On the other hand, it is quite bad at seeing the bigger picture of a software architecture or reason pros and cons about a used implementation. Reminding ourselves that creativity in SWE involves combining existing solutions, GenAI is good at coming up with a simple implementation using a popular library for one problem. But it is bad at deliberating what the best tool for given job is or how a given approach could be improved when this involves seeing the bigger picture.</p> <p>There is also research exploring the potential impact of GenAI on creativity in SWE. The paper<sup>11</sup> I want to look at primarily combines two models:</p> <ol> <li>The 4P framework of creativity that looks at four components to the creative process: Person, Product, Process and Press (the environment). It explains how these components influence creativity, where Person refers to the individual being creative, Product looks at the outcome or artifact, Process considers the methods and techniques used and Press is the wider environment including social, cultural, economic, and physical aspects<sup>12</sup>.</li> <li>The McLuhan tetrad, designed to think about potential impacts of a new technology using 4 questions on how that technology: (a) enhances, (b) makes obsolete, (c) retrieves from obsolescence, and (d) reverses into when pushed to extremes<sup>13</sup>.</li> </ol> <p>The paper then combines these two models in what we engineers would call a cartesian product. The authors use these sixteen scenarios for brainstorming possible effects. The resulting consideration fields are all very interesting and allow for a deep and wide consideration of the impacts of GenAI on SWE and I recommend everyone to read the paper<sup>11</sup>. But in the context of this discussion most interesting are:</p> <ul> <li> <p>The 4P field person looked at through the retrieves question:</p> <p>Creative Work Today, creativity often takes a backseat to productivity. With GenAI taking the burden of writing code, developers will have more time to engage in fun, creative work.<sup>11</sup></p> <p>(italic formatting by the authors)</p> </li> </ul> <p>This goes in the direction that I indicated above, that GenAI can help programmers with those parts of the job that are mundane, the second quote hints at potential risks of self-reinforced patterns:</p> <ul> <li> <p>The 4P field product looked at through the reverses into question:</p> <p>Echo Chamber The more new products resemble common products that GenAI \"understands\", the more GenAI's suggestions could become self-reinforcing, thereby limiting exposure to truly novel ideas.<sup>11</sup></p> <p>(italic formatting by the authors)</p> </li> </ul> <p>Considering that these tools today are presumably trained a lot on code that is open source, these same tools help produce new open source code, and the cycle continues. But this is just one of the risks that the increased use of GenAI in SWE has. However, at least for current tools, it seems to me like the creativity of individual programmers could even gain in relevance. And I don't expect us to be replaced by an LLM generating code on our behalf any time soon.</p>","tags":["software-engineering"]},{"location":"thinkoneering/25_02_swe_creativity/#key-takeaways","title":"Key Takeaways","text":"<p>In this article I tried to shed some light on creativity in software engineering. The key points are:</p> <ul> <li>Creativity requires originality and effectiveness.</li> <li>In SWE, creativity involves a lot of reuse and recombination of components, but it is creativity, nonetheless.</li> <li>The public probably thinks about creativity more in terms of art.</li> <li>Despite the rise of GenAI, the unique creativity of software engineers in problem-solving and innovation remains irreplaceable for now.</li> </ul> <ol> <li> <p>Runco, Mark A., and Garrett J. Jaeger. 2012. \u201cThe Standard Definition of Creativity.\u201d Creativity Research Journal 24 (1): 92\u201396. https://doi.org/10.1080/10400419.2012.650092.\u00a0\u21a9</p> </li> <li> <p>Kaufman, James C., and Ronald A. Beghetto. 2009. \u201cBeyond Big and Little: The Four C Model of Creativity.\u201d Review of General Psychology 13 (1): 1\u201312. https://doi.org/10.1037/a0013688.\u00a0\u21a9\u21a9</p> </li> <li> <p>Beghetto, Ronald A., and James C. Kaufman. 2007. \u201cToward a Broader Conception of Creativity: A Case for\" Mini-c\" Creativity.\u201d Psychology of Aesthetics, Creativity, and the Arts 1 (2): 73. https://doi.org/10.1037/1931-3896.1.2.73.\u00a0\u21a9</p> </li> <li> <p>Groeneveld, Wouter, Laurens Luyten, Joost Vennekens, and Kris Aerts. 2021. \u201cExploring the Role of Creativity in Software Engineering.\u201d arXiv. https://doi.org/10.48550/arXiv.2101.00837.\u00a0\u21a9\u21a9</p> </li> <li> <p>Inman, Sarah, Sarah D\u2019Angelo, and Bogdan Vasilescu. 2024. \u201cDeveloper Productivity for Humans, Part 8: Creativity in Software Engineering.\u201d IEEE Software 41 (2): 11\u201316. https://doi.org/10.1109/MS.2023.3340831.\u00a0\u21a9\u21a9</p> </li> <li> <p>Henkel, Christian. 2025. \u201cHow Do Personal and Company Identities Shape Open Source Contributions?\u201d Thinkoneering. https://thinkoneering.com/thinkoneering/25\\01\\oss\\identity/.\u00a0\u21a9</p> </li> <li> <p>Theodor W Adorno. 1953. \u201c\u00dcber Technik Und Humanismus.\u201d In Technik Und Ethik. Reclam.\u00a0\u21a9</p> </li> <li> <p>Claudia Baxter. 2024. \u201cAI Art: The End of Creativity or the Start of a New Movement?\u201d BBC. https://www.bbc.com/future/article/20241018-ai-art-the-end-of-creativity-or-a-new-movement.\u00a0\u21a9</p> </li> <li> <p>Duncan Crabtree-Ireland. 2025. \u201cHow AI Can Empower, Not Replace, Human Creativity.\u201d World Economic Forum. https://www.weforum.org/stories/2025/01/artificial-intelligence-must-serve-human-creativity-not-replace-it/.\u00a0\u21a9</p> </li> <li> <p>Maciejewska, Joanna. 2024. \u201cYou Know What the Biggest Problem with Pushing All-Things-AI Is? ...\u201d Tweet. Twitter. https://x.com/AuthorJMac/status/1773679197631701238.\u00a0\u21a9</p> </li> <li> <p>Jackson, Victoria, Bogdan Vasilescu, Daniel Russo, Paul Ralph, Maliheh Izadi, Rafael Prikladnicki, Sarah D\u2019Angelo, Sarah Inman, Anielle Lisboa, and Andre van der Hoek. 2024. \u201cCreativity, Generative AI, and Software Development: A Research Agenda.\u201d arXiv. https://doi.org/10.48550/arXiv.2406.01966.\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>Rhodes, Mel. 1961. \u201cAn Analysis of Creativity.\u201d The Phi Delta Kappan 42 (7): 305\u201310. https://www.jstor.org/stable/20342603.\u00a0\u21a9</p> </li> <li> <p>McLuhan, Marshall. 1977. \u201cLaws of the Media.\u201d ETC: A Review of General Semantics 34 (2): 173\u201379. https://www.jstor.org/stable/42575246.\u00a0\u21a9</p> </li> </ol>","tags":["software-engineering"]},{"location":"thinkoneering/25_04_book_on_goals/","title":"You can achieve f*ck all if you really want it","text":"<p>Disclaimer: This is about a book that does not exist. But if it would exist, I want to start reading it today!</p>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#foreword","title":"Foreword","text":"<p>This book is not about becoming a billionaire. It\u2019s not about waking up at 5 a.m., drinking celery juice, running a startup, or cold-plunging your way to enlightenment.</p> <p>It\u2019s about you \u2014 and how you\u2019re probably chasing goals that don\u2019t belong to you.</p> <p>In a world overflowing with advice, lifehacks, and productivity porn, it\u2019s surprisingly rare to ask: Why am I even doing this?</p> <p>As someone who has chased all the wrong things for all the wrong reasons \u2014 and occasionally a few right ones \u2014 I wrote this book not because I have it all figured out, but because I know what it looks like when things don\u2019t make sense. I\u2019ve seen it in friends, in colleagues, and most clearly, in the mirror.</p> <p>This book is for people who are tired of being motivated by someone else\u2019s life. If that\u2019s you: good. You\u2019re not lazy. You\u2019re just ready to stop pretending.</p> <p>Welcome. Let\u2019s begin.</p>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#summary","title":"Summary","text":"<p>You Can Achieve F*ck All If You Really Want It is a clear-eyed, brutally honest guide to redefining personal goals in an era of hustle myths, lifestyle templates, and self-help echo chambers.</p> <p>Most self-improvement books assume you already know what you want. This one doesn\u2019t.</p> <p>Instead, it starts at zero \u2014 with the uncomfortable truth that many of us set goals based on borrowed images: social media influencers, elite athletes, startup founders, or the vague sense that we\u2019re \u201cfalling behind.\u201d</p> <p>Worse: we don\u2019t borrow just one goal. We borrow all of them. We want to be fit, spiritual, wealthy, well-read, creative, calm, ambitious \u2014 all at once. And that doesn\u2019t work. Because real goals don\u2019t just tell you what to do \u2014 they tell you what not to do. They create focus by closing doors.</p> <p>This book gives you the tools to stop that madness.</p> <p>Through clear exercises, thoughtful provocations, and unapologetic honesty, you\u2019ll learn how to:</p> <ul> <li>Recognize goals that don\u2019t belong to you</li> <li>Uncover your actual values (and not the ones you were told to have)</li> <li>Spot the difference between inspiration and imitation</li> <li>Use constraint as a filter: how fewer goals make stronger action</li> <li>Test-drive goals through low-commitment experiments before going all-in</li> <li>Build an internal compass instead of chasing external approval</li> </ul> <p>This is not a book about optimizing your calendar. It\u2019s about figuring out why you're filling it in the first place.</p>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#introduction-the-problem-with-goals","title":"Introduction: The Problem with Goals","text":"<p>Let\u2019s be honest: You\u2019re probably not unmotivated. You\u2019re probably not broken. You\u2019re probably just doing things that don\u2019t mean anything to you.</p> <p>And it\u2019s not your fault.</p> <p>We live in a time where setting goals is encouraged \u2014 but choosing them well is rarely discussed. You\u2019ve been told to want success, discipline, abs, side hustles, mindfulness, and a dream job \u2014 all at once. And so you try. You make a list. You start strong. Then you burn out or stall, not because you\u2019re weak, but because your brain doesn\u2019t know what to prioritize.</p> <p>You\u2019re trying to steer in five directions at once.</p> <p>And so even the things that might matter get drowned in noise.</p> <p>The problem with most goals is not that they\u2019re wrong \u2014 it\u2019s that they\u2019re not yours. Or that there are too many of them. A real goal simplifies your life. It helps you say no. But borrowed goals multiply complexity without adding meaning. They feel exciting at first, but lead nowhere.</p> <p>This book offers an alternative.</p> <p>Instead of giving you another productivity system or 90-day plan, we\u2019ll go deeper \u2014 into your assumptions, your fears, and your unmet needs. You\u2019ll learn how to clear the mental clutter, detect the false signals, and finally make decisions with clarity and confidence.</p> <p>And no, that doesn\u2019t mean giving up on ambition. It means pointing your ambition in the right direction.</p> <p>Motivational Section: F*ck All is a Direction, Not a Destination Let me make something clear: \u201cf*ck all\u201d isn\u2019t about giving up. It\u2019s not about apathy or nihilism. It\u2019s about choosing deliberate nothingness over accidental everything.</p> <p>Because when you stop chasing the wrong things, you make room for the right ones.</p> <p>You don\u2019t need 10-year plans, color-coded boards, or vision quests to get started. You just need to be ruthlessly honest with yourself \u2014 about what actually lights you up, what you\u2019re willing to struggle for, and what can finally be left behind.</p> <p>Here\u2019s what we\u2019ll do in the chapters ahead:</p> <ul> <li>You'll map your current goals \u2014 not the ones you say out loud, but the ones you secretly live by.</li> <li>You\u2019ll learn the difference between goals, values, and fears, and why mixing them up leads to confusion.</li> <li>You'll run a \"goal fast\", where you temporarily let go of everything, and watch what comes back naturally.</li> <li>You\u2019ll try mini-experiments, where you test your curiosity in practice, not theory.</li> <li>And you\u2019ll build a personal filtering system \u2014 so that every shiny opportunity, every trend, every new \u201cmust\u201d can be judged on your terms, not theirs.</li> </ul> <p>By the end, you won\u2019t have a blueprint. You\u2019ll have something better: a compass. One that actually points to you.</p> <p>That\u2019s what it means to achieve f*ck all. To finally stop performing purpose \u2014 and start living it.</p>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#a-table-of-contents","title":"A Table of Contents","text":"","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#part-i-the-bullshit-we-call-goals","title":"Part I \u2013 The Bullshit We Call Goals","text":"<p>Introduction: The Cult of the Goal</p> <ul> <li>Why everyone has goals, but few know why</li> <li>How we got here: lifestyle myths and ambition theatre</li> <li>What this book isn\u2019t about</li> </ul> <p>Borrowed Dreams, Burnout Lives</p> <ul> <li>How we end up chasing other people\u2019s visions</li> <li>The hidden costs of chasing too much</li> <li>Spotting the \"shoulds\" in your life</li> </ul> <p>The Mirage of Motivation</p> <ul> <li>Why discipline won\u2019t save a meaningless goal</li> <li>What inspiration actually signals (and doesn\u2019t)</li> <li>When dopamine lies</li> </ul>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#part-ii-clearing-the-clutter","title":"Part II \u2013 Clearing the Clutter","text":"<p>F*ck It: The Goal Detox</p> <ul> <li>A guided audit of all your current \"goals\"</li> <li>The \u201cGoal Fast\u201d \u2014 doing nothing to find something</li> <li>Anxiety, silence, and what shows up when you stop</li> </ul> <p>Fear is Not a Goal</p> <ul> <li>When you\u2019re trying to outrun shame</li> <li>Success as avoidance</li> <li>Rewriting the scripts you didn\u2019t write</li> </ul> <p>The Power of Saying No</p> <ul> <li>Why focus isn\u2019t about more effort</li> <li>The myth of balance</li> <li>Choosing by subtracting</li> </ul>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#part-iii-finding-what-actually-matters","title":"Part III \u2013 Finding What Actually Matters","text":"<p>From Values to Vision</p> <ul> <li>How to define your real values without corporate posters</li> <li>Value conflicts and what to do about them</li> <li>The \u201cRegret Test\u201d and \u201cJoy List\u201d method</li> </ul> <p>Designing Good Goals</p> <ul> <li>A goal is a tool, not a tattoo</li> <li>Goals that are testable, flexible, and aligned</li> <li>The difference between real effort and performative effort</li> </ul> <p>Testing Before Committing</p> <ul> <li>How to run a personal pilot project</li> <li>Tiny experiments to learn what sticks</li> <li>When to quit, when to commit</li> </ul>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#part-iv-staying-on-your-path","title":"Part IV \u2013 Staying on Your Path","text":"<p>Building Your Compass</p> <ul> <li>Constructing a simple system to evaluate new ideas</li> <li>The \"Hell Yes / No\" method \u2014 without FOMO</li> <li>Check-ins, not checkboxes</li> </ul> <p>Navigating Drift and Doubt</p> <ul> <li>When you lose sight again \u2014 and you will</li> <li>Adjusting without giving up</li> <li>The value of boredom and rest</li> </ul> <p>You Can Achieve F*ck All (And That\u2019s Enough)</p> <ul> <li>How \u201cless\u201d becomes \u201cmore\u201d over time</li> <li>You\u2019ll still have ambition \u2014 just sharper</li> <li>Your life is the lab. Now go run the experiment.</li> </ul>","tags":["productivity"]},{"location":"thinkoneering/25_04_book_on_goals/#back-to-reality","title":"Back to Reality","text":"<p>Again, this book does not exist. Sorry. But let me know if you would like to read it as much as I do.</p> <p>There are some actually existing books that go in a roughly similar direction. If I ever find one in the future, I will add it here.</p>","tags":["productivity"]},{"location":"thinkoneering/25_06_programming_robots/","title":"How Does One Even Program a Robot?","text":"<p>A robot is characterized primarily by its versatility. It is a tool that can be used for different tasks in many contexts that each have their own special challenges. This makes it inherently hard to program a robot. Especially, if the resulting robotic system is expected to act autonomously and robustly in unforeseen situations.</p> <p>Industrial automation is a well-established application field for robotic manipulators. Here, the act of programming usually means defining a fixed sequence of motions that the robotic arm then executes time and time again. When we instead think of a robot acting in a less structured environment like a home, the robot can not blindly follow a predefined sequence of actions. Because following this sequence will fail as soon as anything in that home changes. And as everyone living with children knows, changes must always be expected but can never be predicted.</p> <p>Here, I am trying to develop an understanding of what it means to program a robot to act autonomously. And I hope that with that understanding it will be easier to see what may be missing in order to build genuinely autonomous machines. Like with many questions, AI is something that comes to mind as an answer. But at least for now, I am assuming a human to be involved in building and programming this robot. Nevertheless, fixing the problems I want to grasp here, will also help AI-based approaches.</p> <p>I am trying hard to make this article approachable for both people who lack a technical background of robotics as well as engineers for whom some of the other concepts may feel a bit out there. I would be curious to learn if this worked. So please get in touch and tell me your thoughts on this topic.</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#on-mystical-creatures-and-system-complexity","title":"On mystical creatures and system complexity","text":"<p>One blog post that brought this topic to many roboticist's attention is Benjie Holson's article introducing the important and mythical non-roboticist<sup>1</sup>. This is the person that simple methods to program robots are seemingly designed for, while the underlying problem is hard. But his point is that this simplification removes aspects from the programming that would have been needed to make the robot work. And in particular the article highlights two categories:</p> <ol> <li> <p>Environment Complexity:   This is what I introduced on top with the messy home.   You don't know in which exact environment the robot will operate, when you build it.</p> </li> <li> <p>Stupid Bullshit Complexity:   I think this can be called integration.   Robotic control systems require internal components that are hard to use because they require very specialized configurations and data formats.</p> </li> </ol> <p>But the crucial point with both of these is that it is important to have a clear user in mind. And if I were to summarize the articles message, I think it is to respect the users intelligence and sanity by designing a way to program a robot that reflects the true complexity of the task to the user (intelligence) without introducing unnecessary complexities that they have to manage (sanity)<sup>1</sup>. </p> <p>A concept that is worth exploring further is complexity. This term is used very broadly. Especially for computer scientists it has to be said that we are not talking about computational complexity. Instead, I want to start with an example from complex systems theory:</p> <p>[...] a system that is complex, in the sense that a great many independent agents are interacting with each other in a great many ways. Think of the quadrillions of chemically reacting proteins, lipids, and nucleic acids that make up a living cell, or the billions of interconnected neurons that make up the brain, or the millions of mutually interdependent individuals who make up a human society.<sup>2</sup></p> <p>Note how the authors always compare individual entities like humans to their whole, e.g. the society. So, complexity must be understood as a difference between scales. This difference becomes apparent when one thinks about the implications of a statement like \"To build a house, you don't need to know quantum physics\". Here the complexity in the underlying quantum physics of all that belongs to the house is undoubtedly higher than that of the architectural plans including their execution. And it is the achievement of the disciplines of civil engineering to enable this without having to worry about quantum physics. This hints at one of my favorite topics, that is emergence. But for now, it is enough to understand that complexity is relative. And crucially, inside of a system it is smaller than outside:</p> <p>The system does not have the capacity to connect a state of its own to everything that happens in the environment and to juxtapose one of its own operations to every environmental occurrence, in order either to enhance or to curtail what is happening. Instead, the system has to bundle and even ignore occurrences, and it must deploy indifference or create special arrangements for the management of complexity.<sup>3</sup></p> <p>For a definition of system, it should be sufficient in this context to think of a finite collection of items including some relations between them. This is somewhat aligned with a common-sense definition of technical systems. Crucially, all systems have an environment, which is simply everything that is not part of the system. But what does this mean for programming robots?</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#building-an-understanding-of-programming-a-robot","title":"Building an Understanding of Programming a Robot","text":"<p>For a start we can think of robot programming in terms of dimensionality reduction. A humanoid robot for example has 30 or more actuators and every possible configuration of these can be thought of as a point in a 30-dimensional space. If I now want to tell the robot to move to a location on the two-dimensional floor of my house or pick up an object in the three-dimensional space, this is clearly a reduction.</p> <p>But it is of course more than that. Because the robot can not magically take up any of these configurations, we must not only consider points but linked points, or paths, because only these are possible movements. The way of programming the robot must also adhere to these constraints. Additionally, programming will add the aspect of time. It will command the robot to be in a given configuration at a given time. A sequence of timed configurations is what we call a trajectory.</p> <p>This is pretty much how an industrial robotic arm is programmed. Imagine a 30-dimensional hypercube, then draw a line through it. That is robot programming. Easy, right?</p> <p>There are additional aspects, like labeling given configurations to make them recognizable, logic relations to other hardware, planning of trajectories between these configurations, like moveit does it in ROS. Additionally, this programming also considers basic limitations of the hardware. For example restricting the angles of joints in order not to damage the robot itself.</p> <p>It is clear how this programming reduces complexity. The relative complexity in the system of the controller is lower compared to the actual robotic hardware and what it could do. This way to program a control system is effective at enabling developers to make the robot repeat predefined motions. What other systems could we think of, though?</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#about-systems-and-languages","title":"About Systems and Languages","text":"<p>For example a language is a system. A system containing all words or symbols that can be used including some relation between them, usually referred to as syntax. Semantics is what we would consider the relation of the language system to some parts of its environment.</p> <p>Also in that environment are all the words of other languages. If we think about programming languages, there may be changes when new language versions are announced. This then changes the language system by considering things that previously were part of the environment to belong to it. Human languages can also add to their system, for example when a new word is taken up by the society of its speakers. New words are often variants of words already present in other languages. For the general way how systems create themselves with respect to their environment, the Chilean biologists Maturana and Valera coined the beautiful term autopoiesis<sup>4</sup>.</p> <p>Generally, I find it helpful for engineers that are constantly thinking about systems of some sort to have a clearer understanding of what this means. And luckily this is not hard at all. Firstly, it is crucial that every way to consider a system is just one arbitrary way to look at the world. For example going back to robotics, it is in no way set in stone what we should consider the system and what the environment. Simply, because there are many, in fact infinite possible choices. The most natural one is to look for example at a mobile robot and consider all the physical hardware that moves with it to be the robotic system. And, by difference this then also defines all the rest as its environment. That includes the surface it moves on, obstacles it may encounter, the outside world, and including even you, the programmer sitting next to it with your laptop. But I always thought that the most useful system border to draw may be that around the computer device controlling the robot. Because then, sensors and actuators are part of the environment and this mental model makes it way easier to consider inaccuracies in perception and the necessity to recover from wrong movements.</p> <p>But let's continue to look at language systems: An interesting post that looks at robot programming from a standpoint of theoretical computer science is written by Dirk Riehle<sup>5</sup>. The article points out the need for a differentiation between the definition of a language and its implementation, when designing a way to program a robot. And programming languages must have clearly defined semantics<sup>5</sup>.</p> <p>For example the now popular Behavior Trees are missing such a semantic, which is why we proposed one<sup>6</sup>. This general field of formalisms that allow to define the autonomous behavior of a robot can be called Robotic Deliberation. And I started my talk at ROSCon 2023 with comparing its relevance with that of the invention of programming languages by Grace Hopper<sup>7</sup>. While this may be thought provoking, it is also rather handwavy. In this article I will try to make it more concrete.</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#autonomy-with-skills","title":"Autonomy with Skills","text":"<p>The approach in industrial robotics that is outlined above is effective at enabling developers to make the robot repeat predefined motions. Some more challenging things are possible, like reacting to sensor input to avoid obstacles in the way of the robot or changing the actual goal of the motion based on the perceived location of an object. But these approaches will fail for any scenario that provides less structure like outdoor environments or my house if I am honest. These scenarios require autonomy.</p> <p>I would define a system as autonomous if it can make decisions towards a goal even if these decisions were not explicitly anticipated in the programming. Developing a robot to react to some conditions at runtime would definitely be feasible with what is described above. But crucially, it would be a very complex solution. These solutions must contain some mapping between a recognized situation and what the robot should do in this case. Think of a long list of conditions and actions.</p> <p>How can we make this list shorter? By reducing the complexity further. To make it simpler to program the robot, we need to reduce the necessary complexity in the system or language used. For example with a humanoid robot, our language should definitely not have to think about the robot falling over, damaging others or itself. A programmer asking the robot to fetch an apple shouldn't have to worry about it falling down the stairs.</p> <p>This is generally achieved by skill-based architectures. The controller must have blocks that are called skills which solve some functionalities without explicitly programming them. For example one skill will handle the complete movement of the robot. Then the act of programming only entails sending for example the goal location the robot should move to. The component that uses or orchestrates these skills towards a desired goal, is the deliberation layer, we talked about above. These or similar architectures could be considered state-of-the-art in more complex robotic systems<sup>8</sup>.</p> <p>If we compare this to the mythical non-roboticist article<sup>1</sup> and the two complexities, environment complexity and stupid bullshit complexity. Skills work towards addressing environment complexity, for example by handling the navigation to a given goal. The reduction of stupid bullshit complexity can be even seen as the primary motivation to introduce skill-based architectures. So, assuming a perfectly designed skill-based architecture, this type of complexity should be reduced to zero in the deliberation layer.</p> <p>But, caution is necessary on the type of this complexity reduction. A design goal for a skill-based architecture must definitely be elimination of unnecessary complexity. And herein lies the challenge. How on earth should we know what may be necessary in this deliberation layer? We expect it to be useful for any possible type of application and it should even handle conditions that a programmer can not anticipate when programming. I guess we have to start somewhere. And I think we should start at the beginning of everything: the almighty creator - the engineer.</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#programming-but-in-your-mind","title":"Programming. But in Your Mind","text":"<p>If we want to make sure that someone can program a robot as easily as possible, we have to elaborate which factors influence the ease of programming.</p> <p>An article that is less specific to robotics but also looking into how humans interact with code is by Erik Bernhardsson<sup>9</sup>. It explicitly introduces the concept of a mental model that another human reading your code has. And this applies well to our question. The article then provides valuable and concrete tips in how to design the code that another developer interacts with. For example the valid suggestion to avoid the need for a mandatory configuration. Another one is to avoid conceptual overload, something that many robotics projects including our own work on formal verification can learn a lot from<sup>9</sup>.</p> <p>But maybe we can look deeper into the idea of that mental model: Just like engineers, another group of people generally considered to be smart are chess players. There exists a very interesting body of research evaluating what it is about the minds of professional chess players that determines their success at chess. One may assume that people who are good at chess can simply think more logically or have access to better rationality in their mind, but the situation is different:</p> <p>By confronting chess players of varying strength--from master to novice-with a perception task and a memory task, we have shown that the amount of information extracted from a briefly exposed position varies with playing strength. [...] The data suggest that the superior performance of stronger players (which does not appear in random positions) derives from the ability of those players to encode the position into larger perceptual chunks, each consisting of a familiar sub-configuration of pieces. Pieces within a single chunk are bound by relations of mutual defense, proximity, attack over small distances, and common color and type.<sup>10</sup></p> <p>Their results suggest that the success of a chess player is related to the size of the chunks they use to store chess boards in their memory. And the ability to retain these chess board configurations in memory is only present for configurations from actual games, not when the pieces are placed on the board randomly. This mental model emerges through repeated exposure to real configurations - not random setups, because these players built the models by actually playing chess. And their success is now not simply determined by how many hours they played but whether they managed to produce a highly effective mental model to quickly recognize and evaluate future board configurations.</p> <p>To quote one of my favorite books of all time:</p> <p>Learning high-level chess can be compared to learning to read. A first grader works hard at recognizing individual letters and assembling them into syllables and words, but a good adult reader perceives entire clauses. An expert reader has also acquired the ability to assemble familiar elements in a new pattern and can quickly \u201crecognize\u201d and correctly pronounce a word that she has never seen before. In chess, recurrent patterns of interacting pieces play the role of letters, and a chess position is a long word or a sentence.<sup>11</sup></p> <p>But what does this have to do with programming robots? I think, the success of building complex autonomous robots is also determined by the utility of the programmers mental model. If we want to make the programming of robots simple, we can not have the programmer invest hours and hours learning to read pieces of robotics applications. Instead, we must make sure that the language that defines the robotic deliberation logic supports the formation of a good mental model. Everyone learning a foreign language knows that this is no easy task, but that there are definitely easier and harder languages one could choose from.</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#what-is-missing","title":"What is missing?","text":"<p>I am unfortunately not in the position to propose a language that can deliver these things. And a blog post is also not necessarily the place to do so. All I want to do is to propose this as a perspective on the topic. And with that I can summarize what I think is needed in the field of robotic deliberation:</p> <p>We need a language for humans. - For humans to program robots.</p> <p>It\u2019s tempting to think that LLMs will soon eliminate the need for programming. But LLMs, too, operate at a language level. And if we haven\u2019t yet designed the right language for robotic behavior \u2014 one that reduces complexity in exactly the right way \u2014 then how could we expect them to work reliably?</p> <p>The language we need must support three key qualities:</p> <ol> <li>Expressivity: Engineers must be able to express what the robot should do in a way that directly aligns with their mental model.   This is about clarity and speed - the ability to quickly express ideas instead of getting your head around some formalism first.</li> <li>Interpretability: A second engineer or your future self must be able to read and comprehend the program quickly.   This means that symbols must be unambiguous and structures must be easily graspable.</li> <li>Predictability: Given a program, the current state of the robot and its environment, it must be obvious and quick to predict correctly what the robot will do.   This increases trust in the system and ultimately enables agency of humans interacting with the robot.</li> </ol> <p>Without these properties, we can only build fragile, opaque, and unmaintainable systems - and then these systems will never be accepted.</p> <p>The language doesn\u2019t have to be textual or graphical. But it must support thinking. That\u2019s the bridge between automation and autonomy. Between a program and a behavior. Between systems.</p>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/25_06_programming_robots/#feedback","title":"Feedback","text":"<p>I am very interested in your feedback. Feel free to reach out to me directly or consider sharing it here:</p> <ol> <li> <p>Holson, Benjie. 2024. \u201cThe Mythical Non-Roboticist.\u201d Substack Newsletter. General Robots. https://generalrobots.substack.com/p/the-mythical-non-roboticist.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Waldrop, Mitchell M. 1993. Complexity: The Emerging Science at the Edge of Order and Chaos. Simon and Schuster.\u00a0\u21a9</p> </li> <li> <p>Luhmann, Niklas. 2013. Introduction to Systems Theory. Cambridge, UK ; Malden, MA : Polity. http://archive.org/details/introductiontosy0000luhm.\u00a0\u21a9</p> </li> <li> <p>Maturana, Humberto R. 1980. Autopoiesis and Cognition : The Realization of the Living. Dordrecht, Holland ; Boston : D. Reidel Pub. Co. http://archive.org/details/autopoiesiscogni0042matu.\u00a0\u21a9</p> </li> <li> <p>\u201cVisual Spaghetti Robotics Edition.\u201d 2023. Dirk Riehle\u2019s Industry and Research Publications. https://dirkriehle.com/2023/06/03/visual-spaghetti-robotics-edition/.\u00a0\u21a9\u21a9</p> </li> <li> <p>Ghiorzi, Enrico, Christian Henkel, Matteo Palmas, Michaela Klauck, and Armando Tacchella. 2025. \u201cExecution Semantics of Behavior Trees in Robotic Applications.\u201d arXiv. https://doi.org/10.48550/arXiv.2408.00090.\u00a0\u21a9</p> </li> <li> <p>Christian Henkel. 2023. \u201cSupporting Robotic Deliberation: The Deliberation Working Group and Tools for Behavior Trees (ROSCon 2023).\u201d New Orleans. https://vimeo.com/879001877.\u00a0\u21a9</p> </li> <li> <p>Rovida, Francesco, Matthew Crosby, Dirk Holz, Athanasios S. Polydoros, Bjarne Gro\u00dfmann, Ronald P. A. Petrick, and Volker Kr\u00fcger. 2017. \u201cSkiROS\u2014A Skill-Based Robot Control Platform on Top of ROS.\u201d In Robot Operating System (ROS): The Complete Reference (Volume 2), edited by Anis Koubaa, 121\u201360. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-54927-9\\4.\u00a0\u21a9</p> </li> <li> <p>Bernhardsson, Erik. 2024. \u201cIt\u2019s Hard to Write Code for Computers, but It\u2019s Even Harder to Write Code for Humans.\u201d Erik Bernhardsson. https://erikbern.com/2024/09/27/its-hard-to-write-code-for-humans.html.\u00a0\u21a9\u21a9</p> </li> <li> <p>Chase, William G., and Herbert A. Simon. 1973. \u201cPerception in Chess.\u201d Cognitive Psychology 4 (1): 55\u201381. https://www.sciencedirect.com/science/article/pii/0010028573900042.\u00a0\u21a9</p> </li> <li> <p>Kahneman, Daniel. 2011. Thinking, Fast and Slow. https://www.penguin.co.uk/books/56314/thinking-fast-and-slow-by-kahneman-daniel/9780141033570.\u00a0\u21a9</p> </li> </ol>","tags":["behavior-trees","deliberation","software-engineering","ros"]},{"location":"thinkoneering/","title":"Thinkoneering","text":""},{"location":"publications/","title":"Publications","text":""},{"location":"cv/","title":"CV","text":""},{"location":"page/2/","title":"Home - A space for my thoughts and projects","text":""},{"location":"page/3/","title":"Home - A space for my thoughts and projects","text":""},{"location":"page/4/","title":"Home - A space for my thoughts and projects","text":""},{"location":"publications/page/2/","title":"Publications","text":""},{"location":"publications/page/3/","title":"Publications","text":""},{"location":"tags/","title":"Tag index","text":""},{"location":"tags/#behavior-trees","title":"behavior-trees","text":"<ul> <li>Execution Semantics of Behavior Trees in Robotic Applications</li> <li>How Does One Even Program a Robot?</li> </ul>"},{"location":"tags/#cloud","title":"cloud","text":"<ul> <li>Fraunhofer IPA: Scientific Associate</li> <li>Fraunhofer IPA: Project Manager</li> <li>Cloud-based cooperative navigation for mobile service robots in dynamic industrial environments</li> <li>Manufacturing Service Bus: An Implementation</li> <li>Challenges of Production Microservices</li> <li>A Predictive Online Path Planning and Optimization Approach for Cooperative Mobile Service Robot Navigation in Industrial Applications</li> </ul>"},{"location":"tags/#cyber-physical-systems","title":"cyber-physical-systems","text":"<ul> <li>Manufacturing Service Bus: An Implementation</li> <li>Wie cyber-physische Systeme zu autonomer Produktion f\u00fchren</li> </ul>"},{"location":"tags/#deliberation","title":"deliberation","text":"<ul> <li>Bosch Research: Research Engineer</li> <li>Results of the ROSCon24 Workshop Survey 'Hands-on with ROS2 Deliberation Technologies</li> <li>How Does One Even Program a Robot?</li> </ul>"},{"location":"tags/#energy-efficiency","title":"energy-efficiency","text":"<ul> <li>Energy Efficient Dynamic Window Approach for Local Path Planning in Mobile Service Robotics</li> <li>Power-minimization and energy-reduction autonomous navigation of an omnidirectional Mecanum robot via the dynamic window approach local trajectory planning</li> </ul>"},{"location":"tags/#first-author","title":"first-author","text":"<ul> <li>Energy Efficient Dynamic Window Approach for Local Path Planning in Mobile Service Robotics</li> <li>Der digitale Arbeitsplatz in der Produktion: Herausforderungen und Chancen</li> <li>An optimal algorithm to solve the combined task allocation and path finding problem</li> <li>Optimized directed roadmap graph for multi-agent path finding using stochastic gradient descent</li> <li>GSRM: Building Roadmaps for Query-Efficient and Near-Optimal Path Planning Using a Reaction Diffusion System</li> </ul>"},{"location":"tags/#formal-methods","title":"formal-methods","text":"<ul> <li>Bosch Research: Research Engineer</li> <li>Towards a Verifiable Toolchain for Robotics</li> <li>Towards Robust Autonomous Robots Using Statistical Model Checking</li> </ul>"},{"location":"tags/#human-robot-collaboration","title":"human-robot-collaboration","text":"<ul> <li>Teilhabe durch Robotik: Ergonomische und sichere Arbeitspl\u00e4tze f\u00fcr schwerbehinderte Produktionsmitarbeiter in der Mensch-Roboter-Kollaboration</li> <li>Inclusion Through Robotics: Designing Human-Robot Collaboration for Handicapped Workers</li> <li>Mensch-Roboter-Kollaboration f\u00fcr Schwerbehinderte als Beitrag zur Inklusion in der Arbeitswelt</li> <li>Mensch-Roboter-Kollaboration f\u00fcr schwerbehinderte Produktionsmitarbeiter</li> </ul>"},{"location":"tags/#industrial-robotics","title":"industrial-robotics","text":"<ul> <li>Pilz: Research Engineer</li> <li>Teilhabe durch Robotik: Ergonomische und sichere Arbeitspl\u00e4tze f\u00fcr schwerbehinderte Produktionsmitarbeiter in der Mensch-Roboter-Kollaboration</li> <li>Inclusion Through Robotics: Designing Human-Robot Collaboration for Handicapped Workers</li> <li>Mensch-Roboter-Kollaboration f\u00fcr Schwerbehinderte als Beitrag zur Inklusion in der Arbeitswelt</li> <li>Wie cyber-physische Systeme zu autonomer Produktion f\u00fchren</li> </ul>"},{"location":"tags/#industry-40","title":"industry-4.0","text":"<ul> <li>Fraunhofer IPA: Scientific Associate</li> <li>Fraunhofer IPA: Project Manager</li> <li>Cloud-based cooperative navigation for mobile service robots in dynamic industrial environments</li> <li>A harmonized approach for constructing a robust and efficient technology backbone for agile manufacturing systems</li> <li>Manufacturing Service Bus: An Implementation</li> <li>A Predictive Online Path Planning and Optimization Approach for Cooperative Mobile Service Robot Navigation in Industrial Applications</li> <li>Adaptive Work Instructions for People with Disabilities in the Context of Human Robot Collaboration</li> <li>Wie cyber-physische Systeme zu autonomer Produktion f\u00fchren</li> </ul>"},{"location":"tags/#manufacturing","title":"manufacturing","text":"<ul> <li>Big-Data-Analytik: Datenbasierte Optimierung produzierender Unternehmen</li> <li>A harmonized approach for constructing a robust and efficient technology backbone for agile manufacturing systems</li> <li>Manufacturing Service Bus: An Implementation</li> <li>Teilhabe durch Robotik: Ergonomische und sichere Arbeitspl\u00e4tze f\u00fcr schwerbehinderte Produktionsmitarbeiter in der Mensch-Roboter-Kollaboration</li> <li>Wie cyber-physische Systeme zu autonomer Produktion f\u00fchren</li> <li>Der digitale Arbeitsplatz in der Produktion: Herausforderungen und Chancen</li> </ul>"},{"location":"tags/#multi-agent-systems","title":"multi-agent-systems","text":"<ul> <li>An optimal algorithm to solve the combined task allocation and path finding problem</li> <li>Optimized directed roadmap graph for multi-agent path finding using stochastic gradient descent</li> <li>Ant colony optimization based multi-robot planner for combined task allocation and path finding</li> </ul>"},{"location":"tags/#navigation","title":"navigation","text":"<ul> <li>Pilz: Research Engineer</li> <li>Bosch Research: Research Engineer</li> <li>Energy Efficient Dynamic Window Approach for Local Path Planning in Mobile Service Robotics</li> <li>Cloud-based cooperative navigation for mobile service robots in dynamic industrial environments</li> <li>A Predictive Online Path Planning and Optimization Approach for Cooperative Mobile Service Robot Navigation in Industrial Applications</li> <li>Power-minimization and energy-reduction autonomous navigation of an omnidirectional Mecanum robot via the dynamic window approach local trajectory planning</li> <li>An optimal algorithm to solve the combined task allocation and path finding problem</li> <li>Optimized directed roadmap graph for multi-agent path finding using stochastic gradient descent</li> <li>Ant colony optimization based multi-robot planner for combined task allocation and path finding</li> <li>GSRM: Building Roadmaps for Query-Efficient and Near-Optimal Path Planning Using a Reaction Diffusion System</li> </ul>"},{"location":"tags/#open-source","title":"open-source","text":"<ul> <li>How do Personal and Company Identities Shape Open Source Contributions?</li> </ul>"},{"location":"tags/#people-with-disabilities","title":"people-with-disabilities","text":"<ul> <li>Teilhabe durch Robotik: Ergonomische und sichere Arbeitspl\u00e4tze f\u00fcr schwerbehinderte Produktionsmitarbeiter in der Mensch-Roboter-Kollaboration</li> <li>Adaptive Work Instructions for People with Disabilities in the Context of Human Robot Collaboration</li> <li>Inclusion Through Robotics: Designing Human-Robot Collaboration for Handicapped Workers</li> <li>Mensch-Roboter-Kollaboration f\u00fcr Schwerbehinderte als Beitrag zur Inklusion in der Arbeitswelt</li> <li>Mensch-Roboter-Kollaboration f\u00fcr schwerbehinderte Produktionsmitarbeiter</li> </ul>"},{"location":"tags/#productivity","title":"productivity","text":"<ul> <li>You can achieve f*ck all if you really want it</li> </ul>"},{"location":"tags/#roadmap-graphs","title":"roadmap-graphs","text":"<ul> <li>Optimized directed roadmap graph for multi-agent path finding using stochastic gradient descent</li> <li>GSRM: Building Roadmaps for Query-Efficient and Near-Optimal Path Planning Using a Reaction Diffusion System</li> </ul>"},{"location":"tags/#ros","title":"ros","text":"<ul> <li>Fraunhofer IPA: Project Manager</li> <li>Pilz: Research Engineer</li> <li>Bosch Research: Research Engineer</li> <li>Results of the ROSCon24 Workshop Survey 'Hands-on with ROS2 Deliberation Technologies</li> <li>How Does One Even Program a Robot?</li> </ul>"},{"location":"tags/#safety","title":"safety","text":"<ul> <li>Pilz: Research Engineer</li> <li>Teilhabe durch Robotik: Ergonomische und sichere Arbeitspl\u00e4tze f\u00fcr schwerbehinderte Produktionsmitarbeiter in der Mensch-Roboter-Kollaboration</li> </ul>"},{"location":"tags/#software-engineering","title":"software-engineering","text":"<ul> <li>Fraunhofer IPA: Scientific Associate</li> <li>Challenges of Production Microservices</li> <li>Towards a Verifiable Toolchain for Robotics</li> <li>Results of the ROSCon24 Workshop Survey 'Hands-on with ROS2 Deliberation Technologies</li> <li>Towards Robust Autonomous Robots Using Statistical Model Checking</li> <li>On Creativity in Software Engineering and the Role of Generative AI</li> <li>How Does One Even Program a Robot?</li> </ul>"}]}